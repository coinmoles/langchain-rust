workspace = { members = ["macros"] }

[package]
description = "LangChain for Rust, the easiest way to write LLM-based programs in Rust"
documentation = "https://langchain-rust.sellie.tech/get-started/quickstart"
edition = "2021"
keywords = ["chain", "chatgpt", "llm", "langchain"]
license = "MIT"
name = "langchain-rust"
publish = true
repository = "https://github.com/Abraxas-365/langchain-rust"
version = "4.6.0"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
macros = { path = "./macros" }

async-recursion = "1.1.1"
async-stream = "0.3.6"
async-trait = "0.1.89"
futures = "0.3"
futures-util = "0.3.31"
tokio = { version = "1", features = ["full"] }
tokio-stream = "0.1.17"

indoc = "2.0.6"
log = "0.4.27"
regex = "1.11.2"
secrecy = "0.10.3"
thiserror = "2.0.16"
url = "2.5.7"
urlencoding = "2.1.3"
uuid = { version = "1.18.1", features = ["v4"] }

csv = "1.3.1"
schemars = { version = "0.8.22", default-features = false, features = [
    "derive",
    "preserve_order",
] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

html-escape = "0.2.13"
readability = { version = "0.3.0", default-features = false }
scraper = "0.24.0"
text-splitter = { version = "0.27.0", features = ["tiktoken-rs", "markdown"] }

reqwest = { version = "0.12", default-features = false, features = [
    "json",
    "stream",
    "charset",
    "http2",
    "macos-system-configuration",
] }
reqwest-eventsource = "0.6.0"
sqlx = { version = "0.8.6", default-features = false, features = [
    "postgres",
    "sqlite",
    "json",
    "uuid",
], optional = true }

async-openai = { version = "0.29.2", default-features = false, features = [
    "byot",
] }
fastembed = { version = "5.1.0", default-features = false, optional = true }
mistralai-client = { version = "0.14.0", optional = true }
qdrant-client = { version = "1.15.0", optional = true }
tiktoken-rs = "0.7.0"

rmcp = { version = "0.6.1", features = [
    "client",
    "reqwest",
    "tower",
    "transport-streamable-http-client-reqwest",
], optional = true }

# Vector stores
pgvector = { version = "0.4.1", features = [
    "postgres",
    "sqlx",
], optional = true }
surrealdb = { version = "2.3.7", optional = true, default-features = false }

# Directory loader
glob = "0.3.3"

# Language parser
strum_macros = { version = "0.27.2", optional = true }
tree-sitter = { version = "0.25.8", optional = true }
tree-sitter-c = { version = "0.24.1", optional = true }
tree-sitter-c-sharp = { version = "0.23", optional = true }
tree-sitter-cpp = { version = "0.23", optional = true }
tree-sitter-go = { version = "0.25.0", optional = true }
tree-sitter-java = { version = "0.23.5", optional = true }
tree-sitter-javascript = { version = "0.25.0", optional = true }
tree-sitter-kotlin-ng = { version = "1.1.0", optional = true }
tree-sitter-python = { version = "0.23.6", optional = true }
tree-sitter-rust = { version = "0.24.0", optional = true }
tree-sitter-scala = { version = "0.24.0", optional = true }
tree-sitter-typescript = { version = "0.23", optional = true }

# Git commit loader
flume = { version = "0.11.1", optional = true }
gix = { version = "0.73.0", default-features = false, optional = true, features = [
    "parallel",
    "revision",
    "serde",
] }

# HTML to Markdown loader
htmd = { version = "0.3.0", optional = true }

# PDF loader
lopdf = { version = "0.38.0", optional = true }
pdf-extract = { version = "0.9.0", optional = true }

# Used only for examples
aws-config = { version = "1.8.6", optional = true, features = [
    "behavior-version-latest",
] }
opensearch = { version = "2", optional = true, default-features = false, features = [
    "aws-auth",
    "rustls-tls",
] }
tracing = "0.1.41"

[features]
default = ["rustls"]

native-tls = [
    "async-openai/native-tls",
    "reqwest/default-tls",
    "sqlx?/runtime-tokio-native-tls",
    "opensearch?/native-tls",
    "surrealdb?/native-tls",
]
rustls = [
    "async-openai/rustls",
    "reqwest/rustls-tls",
    "sqlx?/runtime-tokio-rustls",
    "opensearch?/rustls-tls",
    "surrealdb?/rustls",
]

mistralai = ["mistralai-client"]
ollama = []

fastembed = ["dep:fastembed"]
git = ["gix", "flume"]
html-to-markdown = ["dep:htmd"]
language-parser = [
    "cc",
    "dep:strum_macros",
    "dep:tree-sitter",
    "dep:tree-sitter-c",
    "dep:tree-sitter-c-sharp",
    "dep:tree-sitter-cpp",
    "dep:tree-sitter-go",
    "dep:tree-sitter-java",
    "dep:tree-sitter-javascript",
    "dep:tree-sitter-kotlin-ng",
    "dep:tree-sitter-python",
    "dep:tree-sitter-rust",
    "dep:tree-sitter-scala",
    "dep:tree-sitter-typescript",
]
lopdf = ["dep:lopdf"]
mcp = ["dep:rmcp"]
pdf-extract = ["dep:lopdf", "dep:pdf-extract"]
postgres = ["pgvector", "sqlx"]
qdrant = ["qdrant-client"]
sqlite-vec = ["sqlx"]
sqlite-vss = ["sqlx"]
surrealdb = ["dep:surrealdb"]
extra-keys = []

# Example
opensearch = ["dep:opensearch", "dep:aws-config", "rustls"]

[dev-dependencies]
base64 = "0.22.1"
mockito = "1.7.0"
testcontainers = "0.25.0"
tokio-test = "0.4.4"

[build-dependencies]
cc = { version = "1.2.35", optional = true }
